<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:property-placeholder location="classpath*:META-INF/spring/database.properties"/>

	<context:spring-configured/>

	<bean id="neo4jNodeBacking" class="org.springframework.data.neo4j.aspects.support.node.Neo4jNodeBacking" factory-method="aspectOf">
		<property name="template" ref="neo4jTemplate"/>
		<property name="nodeEntityStateFactory" ref="nodeEntityStateFactory"/>
	</bean>

	<bean class="org.springframework.data.neo4j.aspects.support.relationship.Neo4jRelationshipBacking" factory-method="aspectOf">
		<property name="template" ref="neo4jTemplate"/>
		<property name="relationshipEntityStateFactory" ref="relationshipEntityStateFactory"/>
	</bean>

	
	<bean id="graphDatabaseService" class="org.neo4j.test.ImpermanentGraphDatabase"
			destroy-method="shutdown" scope="singleton">
	</bean>

    <bean id="graphDatabase" class="org.springframework.data.neo4j.support.DelegatingGraphDatabase">
        <constructor-arg ref="graphDatabaseService"/>
    </bean>

    <bean id="mappingInfrastructure" class="org.springframework.data.neo4j.support.MappingInfrastructureFactoryBean">
        <property name="graphDatabaseService" ref="graphDatabaseService"/>
        <property name="conversionService">
            <bean class="org.springframework.data.neo4j.fieldaccess.Neo4jConversionServiceFactoryBean"/>
        </property>
        <property name="nodeTypeRepresentationStrategy" ref="nodeTypeRepresentationStrategy"/>
        <property name="relationshipTypeRepresentationStrategy" ref="relationshipTypeRepresentationStrategy"/>
        <property name="typeRepresentationStrategyFactory" ref="typeRepresentationStrategyFactory"/>
        <property name="entityStateHandler" ref="entityStateHandler"/>
        <property name="mappingContext" ref="mappingContext"/>
        <property name="graphDatabase" ref="graphDatabase"/>
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

    <bean id="neo4jTemplate" class="org.springframework.data.neo4j.support.Neo4jTemplate">
        <constructor-arg name="infrastructure" ref="mappingInfrastructure"/>
    </bean>
    <bean id="graphEntityInstantiator" class="org.springframework.data.neo4j.cross_store.support.node.CrossStoreNodeEntityInstantiator">
        <constructor-arg ref="nodeEntityInstantiator"/>
        <constructor-arg ref="entityManagerFactory"/>
    </bean>
    <bean id="entityStateHandler" class="org.springframework.data.neo4j.support.mapping.EntityStateHandler">
        <constructor-arg ref="mappingContext"/>
        <constructor-arg ref="graphDatabase"/>
    </bean>
    <bean id="relationshipEntityInstantiator" class="org.springframework.data.neo4j.support.relationship.RelationshipEntityInstantiator">
        <constructor-arg ref="entityStateHandler"/>
    </bean>

    <bean id="nodeEntityInstantiator" class="org.springframework.data.neo4j.support.node.NodeEntityInstantiator">
        <constructor-arg ref="entityStateHandler"/>
    </bean>

    <bean id="typeRepresentationStrategyFactory" class="org.springframework.data.neo4j.support.typerepresentation.TypeRepresentationStrategyFactory">
        <constructor-arg ref="graphDatabase"/>
    </bean>

    <bean id="nodeTypeRepresentationStrategy" factory-bean="typeRepresentationStrategyFactory" factory-method="getNodeTypeRepresentationStrategy" />
    <bean id="relationshipTypeRepresentationStrategy" factory-bean="typeRepresentationStrategyFactory" factory-method="getRelationshipTypeRepresentationStrategy"/>

    <bean id="nodeEntityStateFactory" class="org.springframework.data.neo4j.cross_store.support.node.CrossStoreNodeEntityStateFactory">
        <constructor-arg ref="mappingContext"/>
        <constructor-arg>
            <bean class="org.springframework.data.neo4j.fieldaccess.NodeDelegatingFieldAccessorFactory$Factory"/>
        </constructor-arg>
        <constructor-arg>
            <bean class="org.springframework.data.neo4j.cross_store.support.node.CrossStoreNodeDelegatingFieldAccessorFactory$Factory"/>
        </constructor-arg>
		<constructor-arg name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <bean id="mappingContext" class="org.springframework.data.neo4j.support.mapping.Neo4jMappingContext">
        <property name="initialEntitySet">
            <set>
                <value>org.springframework.data.neo4j.partial.model.Restaurant</value>
                <value>org.springframework.data.neo4j.partial.model.Recommendation</value>
                <value>org.springframework.data.neo4j.partial.model.User</value>
            </set>
        </property>
    </bean>


    <bean id="relationshipEntityStateFactory" class="org.springframework.data.neo4j.support.relationship.RelationshipEntityStateFactory">
        <constructor-arg ref="mappingContext"/>
        <constructor-arg>
            <bean class="org.springframework.data.neo4j.fieldaccess.RelationshipDelegatingFieldAccessorFactory$Factory"/>
        </constructor-arg>
    </bean>
    

    <bean id="transactionManager" class="org.springframework.data.transaction.ChainedTransactionManager" >
		<constructor-arg>
            <list>
            <bean class="org.springframework.orm.jpa.JpaTransactionManager" id="jpaTransactionManager">
                <property name="entityManagerFactory" ref="entityManagerFactory"/>
            </bean>
		    <bean class="org.springframework.data.neo4j.config.JtaTransactionManagerFactoryBean">
		        <constructor-arg ref="graphDatabaseService"/>
		    </bean>
            </list>
		</constructor-arg>
	</bean>

	<bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" id="dataSource">
        <property name="driverClassName" value="${database.driverClassName}"/>
        <property name="url" value="${database.url}"/>
        <property name="username" value="${database.username}"/>
        <property name="password" value="${database.password}"/>
    </bean>
 
    <tx:annotation-driven mode="aspectj" transaction-manager="transactionManager"/>

    <bean class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" id="entityManagerFactory" depends-on="neo4jNodeBacking">
        <property name="dataSource" ref="dataSource"/>
        <property name="persistenceXmlLocation" value="classpath:META-INF/persistence.xml"/>
    </bean>

    <bean id="entityManager" class="org.springframework.orm.jpa.SharedEntityManagerCreator" factory-method="createSharedEntityManager">
        <constructor-arg ref="entityManagerFactory"/>
    </bean>
</beans>
